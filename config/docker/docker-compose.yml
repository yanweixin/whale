version: "3.8"
services:
  mydb01:
    image: docker.io/mysql/mysql-server:${MYSQL_VERSION}
    container_name: mysql01
    ports:
      - 30031:3306
    volumes:
      - ./conf.d/my.cnf:/etc/mysql/my.cnf
      - ./mysql-initdb.d:/docker-entrypoint-initdb.d/
      - /opt/mysql/data01:/var/lib/mysql
      - /etc/ssl/certs/mysql:/etc/ssl/certs/mysql
    networks:
      - mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASS}
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1g
        reservations:
          cpus: '0.25'
          memory: 100m
      restart_policy:
        condition: any
        window: 5s

  mydb02:
    image: docker.io/mysql/mysql-server:${MYSQL_VERSION}
    container_name: mysql02
    volumes:
      - ./conf.d/my-replica01.cnf:/etc/mysql/my.cnf
      - /opt/mysql/data02:/var/lib/mysql
      - /etc/ssl/certs/mysql:/etc/ssl/certs/mysql
    networks:
      - mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASS}
    depends_on:
      - mydb01
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1g
        reservations:
          cpus: '0.25'
          memory: 100m
      restart_policy:
        condition: any
        window: 5s

  mydb03:
    image: docker.io/mysql/mysql-server:${MYSQL_VERSION}
    container_name: mysql03
    volumes:
      - ./conf.d/my-replica02.cnf:/etc/mysql/my.cnf
      - /opt/mysql/data03:/var/lib/mysql
      - /etc/ssl/certs/mysql:/etc/ssl/certs/mysql
    networks:
      - mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASS}
    depends_on:
      - mydb01
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1g
        reservations:
          cpus: '0.25'
          memory: 100m
      restart_policy:
        condition: any
        window: 5s

  pgdb:
    image: docker.io/library/postgres:${POSTGRES_VERSION}
    container_name: postgres
    ports:
      - 5000:5432
    volumes:
      - ./conf.d/postgres.conf:/etc/postgresql/postgresql.conf
      - ./postgres-initdb.d:/docker-entrypoint-initdb.d/
      - /opt/postgresql/data:/var/lib/postgresql/data
    networks:
      - postgres
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
      - POSTGRES_INITDB_ARGS=--data-checksums --encoding=UTF8 --locale=C --auth=scram-sha-256
    command: -c 'config_file=/etc/postgresql/postgresql.conf'
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1g
        reservations:
          cpus: '0.25'
          memory: 100m
      restart_policy:
        condition: any
        window: 5s

  mysql-haproxy:
    image: docker.io/library/haproxy:2.4.2
    container_name: mysql-haproxy
    ports:
      - 30032:3306
    volumes:
      - ./conf.d/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
      - /dev/log:/dev/log
    networks:
      - mysql
    sysctls:
      net.ipv4.ip_unprivileged_port_start: 0
    depends_on:
      - mydb01
      - mydb02
      - mydb03
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 50m

networks:
  mysql:
    driver: bridge
    name: mysql
  postgres:
    driver: bridge
    name: postgres